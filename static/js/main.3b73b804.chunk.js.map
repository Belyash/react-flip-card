{"version":3,"sources":["FlipCard/index.js","App.tsx","serviceWorker.js","index.tsx"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","FlipCard","_super","props","_this","call","this","state","isOpen","handleChange","setState","Boolean","forceOpen","__","constructor","prototype","create","__extends","render","_a","caption","children","height","width","style","React","createElement","className","onClick","displayName","Component","App","react_default","a","FlipCard_FlipCard","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAmBIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAY5B,IAAIO,EAA0B,SAAUC,GAEpC,SAASD,EAASE,GACd,IAAIC,EAAQF,EAAOG,KAAKC,KAAMH,IAAUG,KAexC,OAdAF,EAAMG,MAAQ,CACVC,QAAQ,GAKZJ,EAAMK,aAAe,WACjBL,EAAMM,SAAS,CACXF,QAASJ,EAAMG,MAAMC,UAG7BJ,EAAMG,MAAQ,CACVC,OAAQG,QAAQR,EAAMS,YAEnBR,EAsBX,OAjDJ,SAAmBX,EAAGC,GAElB,SAASmB,IAAOP,KAAKQ,YAAcrB,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEsB,UAAkB,OAANrB,EAAaC,OAAOqB,OAAOtB,IAAMmB,EAAGE,UAAYrB,EAAEqB,UAAW,IAAIF,GAO/EI,CAAUhB,EAAUC,GAmBpBD,EAASc,UAAUG,OAAS,WACxB,IAAIC,EAAKb,KAAKH,MAAOiB,EAAUD,EAAGC,QAASC,EAAWF,EAAGE,SAAUC,EAASH,EAAGG,OAAQC,EAAQJ,EAAGI,MAC9Ff,EAASF,KAAKC,MAAMC,OACpBgB,EAAQ,GAOZ,OANIF,IACAE,EAAMF,OAASA,GAEfC,IACAC,EAAMD,MAAQA,GAEVE,IAAMC,cAAc,MAAO,CAAEC,UAAW,cAAgBnB,EAAS,SAAW,IAAKgB,MAAOA,GAC5FC,IAAMC,cAAc,MAAO,CAAEC,UAAW,oBACpCF,IAAMC,cAAc,MAAO,CAAEC,UAAW,mBAAoBC,QAAStB,KAAKG,cACtEgB,IAAMC,cAAc,MAAO,CAAEC,UAAW,sBACxCF,IAAMC,cAAc,MAAO,CAAEC,UAAW,sBAAwBP,IACpEK,IAAMC,cAAc,MAAO,CAAEC,UAAW,mBACpCF,IAAMC,cAAc,MAAO,CAAEC,UAAW,mBAAoBC,QAAStB,KAAKG,eAC1EgB,IAAMC,cAAc,MAAO,CAAEC,UAAW,mBAAqBN,OAE7EpB,EAAS4B,YAAc,WAChB5B,EAxCmB,CAyC5BwB,IAAMK,WCxCOC,0LA7BX,OACIC,EAAAC,EAAAP,cAAA,OAAKC,UAAU,OACXK,EAAAC,EAAAP,cAAA,cACIM,EAAAC,EAAAP,cAAA,iCACAM,EAAAC,EAAAP,cAAA,0CAGJM,EAAAC,EAAAP,cAAA,OAAKC,UAAU,OACXK,EAAAC,EAAAP,cAAA,OAAKC,UAAU,OACXK,EAAAC,EAAAP,cAACQ,EAAD,CAAUd,QAAQ,6BAAlB,yOAIJY,EAAAC,EAAAP,cAAA,OAAKC,UAAU,OACXK,EAAAC,EAAAP,cAACQ,EAAD,CAAUd,QAAQ,0BAAlB,4OAIJY,EAAAC,EAAAP,cAAA,OAAKC,UAAU,OACXK,EAAAC,EAAAP,cAACQ,EAAD,CAAUd,QAAQ,cAAlB,uQArBFK,IAAMK,YCOJnB,QACW,cAA7BwB,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASrB,OAAOc,EAAAC,EAAAP,cAACc,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3b73b804.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\r\n * Checkbox component.\r\n */\r\nvar FlipCard = /** @class */ (function (_super) {\r\n    __extends(FlipCard, _super);\r\n    function FlipCard(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            isOpen: false,\r\n        };\r\n        /**\r\n         * Handler for open/close card.\r\n         */\r\n        _this.handleChange = function () {\r\n            _this.setState({\r\n                isOpen: !_this.state.isOpen,\r\n            });\r\n        };\r\n        _this.state = {\r\n            isOpen: Boolean(props.forceOpen),\r\n        };\r\n        return _this;\r\n    }\r\n    FlipCard.prototype.render = function () {\r\n        var _a = this.props, caption = _a.caption, children = _a.children, height = _a.height, width = _a.width;\r\n        var isOpen = this.state.isOpen;\r\n        var style = {};\r\n        if (height) {\r\n            style.height = height;\r\n        }\r\n        if (width) {\r\n            style.width = width;\r\n        }\r\n        return (React.createElement(\"div\", { className: \"flip-card \" + (isOpen ? 'm-open' : ''), style: style },\r\n            React.createElement(\"div\", { className: \"flip-card__inner\" },\r\n                React.createElement(\"div\", { className: \"flip-card__front\", onClick: this.handleChange },\r\n                    React.createElement(\"div\", { className: \"flip-card__expand\" }),\r\n                    React.createElement(\"div\", { className: \"flip-card__caption\" }, caption)),\r\n                React.createElement(\"div\", { className: \"flip-card__back\" },\r\n                    React.createElement(\"div\", { className: \"flip-card__close\", onClick: this.handleChange }),\r\n                    React.createElement(\"div\", { className: \"flip-card__text\" }, children)))));\r\n    };\r\n    FlipCard.displayName = 'FlipCard';\r\n    return FlipCard;\r\n}(React.Component));\n\nexport { FlipCard };\n","import React from 'react';\n\nimport { FlipCard } from './FlipCard';\nimport './FlipCard/index.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n        <div className=\"app\">\n            <header>\n                <h1>Flip Card component</h1>\n                <h2>Nice component for ReactJS.</h2>\n            </header>\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <FlipCard caption=\"Hypertext Markup Language\">\n                        Hypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets (CSS) and JavaScript, it forms a triad of cornerstone technologies for the World Wide Web.\n                    </FlipCard>\n                </div>\n                <div className=\"col\">\n                    <FlipCard caption=\"Cascading Style Sheets\">\n                        Cascading Style Sheets (CSS) is a style sheet language used for describing the presentation of a document written in a markup language like HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.\n                    </FlipCard>\n                </div>\n                <div className=\"col\">\n                    <FlipCard caption=\"JavaScript\">\n                        JavaScript, often abbreviated as JS, is a high-level, interpreted programming language that conforms to the ECMAScript specification. JavaScript has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.\n                    </FlipCard>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}